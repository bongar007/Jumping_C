<h1 class="mt-4">Dashboard</h1>
<p class="lead mb-3">Welcome <%= user.name %></p>
<a href="/users/logout" class="btn btn-secondary">Logout</a>

<div id="canvas-container" class="container">
  <progress value="0" max="10" id="progressBar"></progress>
  <script>
    let cnv;
    let generatedGrid = [];
    let readyElement;
    let counter = 30;
    const announcer = document.querySelector("#announcer");
    const canvasSize = 500;

    function centerCanvas() {
      let x = (windowWidth - width) / 2;
      let y = (windowHeight - height) / 2;
      cnv.position(x, y);
    }

    function windowResized() {
      centerCanvas();
    }

    function generateGrid() {
      let grid = [];
      const randomPlaceX = Math.floor(Math.random() * 24);
      const randomPlaceY = Math.floor(Math.random() * 24);
      for (let x = 0; x < 25; x++) {
        let row = [];
        for (let y = 0; y < 25; y++) {
          row.push("");
        }
        grid.push(row);
      }
      grid[randomPlaceX][randomPlaceY] = "C";
      return grid;
    }

    function locateO(event) {
      const tileSize = canvasSize / generatedGrid.length;
      const { layerX, layerY } = event;

      const x = Math.floor(layerX / tileSize);
      console.log("locateO x", x);
      const y = Math.floor(layerY / tileSize);
      console.log("locateO y", y);

      generatedGrid[x][y] = {};

      // redraw();
    }

    function createZero(x, y) {
      const tileSize = canvasSize / generatedGrid.length;

      stroke(255);
      noFill();
      strokeWeight(2);
      ellipse(x * tileSize + 10, y * tileSize + 10, 12, 16);
    }

    function drawZeros(grid) {
      const tileSize = canvasSize / grid.length;

      grid.forEach((row, x) => {
        row.forEach((element, y) => {
          if (element !== "C") {
            createZero(x, y);
          } else {
            stroke(255);
            fill(255);
            ellipse(x * tileSize + 10, y * tileSize + 10, 12, 16);
          }
        });
      });
    }

    let timeleft = 10;
    function timer(el) {
      const downloadTimer = setInterval(function () {
        if (timeleft <= 0) {
          clearInterval(downloadTimer);
          noLoop();
          cnv.addClass("hide");
          readyElement.removeClass("hide").addClass("show").html("Game Over!!");
        }
        document.getElementById("progressBar").value = 10 - timeleft;
        timeleft -= 1;
      }, 1000);
    }

    function setup() {
      cnv = createCanvas(canvasSize, canvasSize);
      centerCanvas();
      cnv.parent("canvas-container");
      readyElement = createElement("h1", "READY???");
      readyElement.addClass("show");
      setTimeout(() => {
        readyElement.removeClass("show").addClass("hide");
      }, 2000);
      timer(readyElement);
      cnv.mouseClicked(locateO);
      frameRate(0.5);
    }

    function draw() {
      createCanvas(canvasSize, canvasSize);
      background(0);
      generatedGrid = generateGrid();
      drawZeros(generatedGrid);
    }
  </script>
  <style>
    .show {
      position: absolute;
      display: block;
      margin-left: auto;
      margin-right: auto;
      left: 0;
      right: 0;
      text-align: center;
    }
    .hide {
      display: none;
    }
  </style>
</div>
